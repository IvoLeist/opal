import "Ws.proto";
package Magma;

option java_package = "org.obiba.opal.web.model";

message DatasourceFactoryDto {
  extensions 1000 to max;
}

message ExcelDatasourceFactoryDto {
  required string file = 1;
  optional bool readOnly = 2;
  extend DatasourceFactoryDto { 
    optional ExcelDatasourceFactoryDto params = 1000; 
  }
}

message CsvDatasourceFactoryDto {
  optional string bundle = 1;
  repeated CsvDatasourceTableBundleDto tables = 2; 
  optional string characterSet = 3;
  optional string separator = 4;
  optional string quote = 5;
  optional int32 firstRow = 6;
  extend DatasourceFactoryDto { 
    optional CsvDatasourceFactoryDto params = 1001; 
  }
}

message CsvDatasourceTableBundleDto {
  required string name = 1;
  optional string variables = 2;
  optional string data = 3;
}

message FsDatasourceFactoryDto {
  required string file = 1;
  optional string unit = 2;
  extend DatasourceFactoryDto { 
    optional FsDatasourceFactoryDto params = 1002; 
  }
}

message JdbcDatasourceFactoryDto {
  required string driver = 1;
  required string url = 2;
  required string username = 3;
  required string password = 4;
  required JdbcDatasourceSettingsDto settings = 5;
  extend DatasourceFactoryDto { 
    optional JdbcDatasourceFactoryDto params = 1003; 
  } 
}

message JdbcDatasourceSettingsDto {
  required string defaultEntityType = 1;
  required bool useMetadataTables = 2;
  repeated string mappedTables = 3;
  repeated JdbcValueTableSettingsDto tableSettings = 4;
  optional string defaultCreatedTimestampColumnName = 5;
  optional string defaultUpdatedTimestampColumnName = 6;
}

message JdbcValueTableSettingsDto {
  required string sqlTableName = 1;
  optional string magmaTableName = 2;
  required string entityType = 3;
  repeated string entityIdentifierColumns = 4;
  optional string createdTimestampColumnName = 5;
  optional string updatedTimestampColumnName = 6;
}

message HibernateDatasourceFactoryDto {
  optional bool key = 1;
  extend DatasourceFactoryDto { 
    optional HibernateDatasourceFactoryDto params = 1004; 
  } 
}

message DatasourceDto {
  required string name = 1;
  optional string link = 2;
  repeated string table = 3;
}

message TableDto {
  required string name = 1;
  required string entityType = 2;
  optional string link = 3;
  optional int32 variableCount = 4;
  optional int32 valueSetCount = 5;
  optional string datasourceName = 6;
  repeated VariableDto variables = 7;
}

message VariableDto {
  required string name = 1;
  required string entityType = 2;
  required string valueType = 3;
  optional string mimeType = 4;
  required bool isRepeatable = 5;
  optional string occurrenceGroup = 6;  
  optional string link = 7;
  repeated AttributeDto attributes = 8;
  repeated CategoryDto categories = 9;
  optional string unit = 10;
  optional LinkDto parentLink = 11;
}

message CategoryDto {
  required string name = 1;
  required bool isMissing = 2;
  repeated AttributeDto attributes = 3;
}

message AttributeDto {
  required string name = 1;
  required string value = 2;
  optional string locale = 3;
}

message FrequencyDto {
  required string name = 1;
  required int32 value = 2;
}

message VariableEntityDto {
  required string identifier = 1;
  optional string entityType = 2;
}

message ValueSetDto {
  required VariableEntityDto  entity = 1;
  repeated string variables = 2;
  repeated ValueDto values = 3;
}

message ValueDto {
  required string valueType = 1;
  required bool isSequence = 2;
  optional string value = 3;
}

message LinkDto {
  required string rel = 1;
  required string link = 2;
}

message DescriptiveStatsDto {
  optional double min = 1;
  optional double max = 2;
  optional double mean = 3;
  optional double geometricMean = 4;
  optional int64 n = 5;
  optional double sum = 6;
  optional double sumsq = 7;
  optional double stdDev = 8;
  optional double variance = 9;
  repeated double percentiles = 10;
  optional double skewness = 11;
  optional double kurtosis = 12;
  optional double median = 13;
  repeated double values = 14;
}

message TableCompareDto {
  required TableDto compared = 1;
  optional TableDto with = 2; // optional because this is absent when the destination table does not exist
  repeated VariableDto newVariables = 3; // list of all variables present in "compared" but not in "with"
  repeated VariableDto existingVariables = 4; // list of all variables present in both and whose definitions are compatible
  repeated VariableDto missingVariables = 5; // list of all variables present in "with" but not in "compared"
  repeated ConflictDto conflicts = 6;  // list of all variables present in both and whose definitions are incompatible
}

message ConflictDto {
  required VariableDto variable = 1;
  required string code = 2;
  repeated string arguments = 3;
}

message DatasourceCompareDto {
  required DatasourceDto compared = 1;
  required DatasourceDto with = 2;
  repeated TableCompareDto differences = 3;
}

