<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <bean id="datasourceClasses" class="org.obiba.magma.datasource.hibernate.support.AnnotationConfigurationHelper" />
  <bean id="auditClasses" class="org.obiba.magma.audit.hibernate.support.AnnotationConfigurationHelper" />

  <!-- The Hibernate SessionFactory -->
  <bean id="keySessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource">
      <ref bean="keyDataSource" />
    </property>
    <property name="namingStrategy">
      <bean class="org.obiba.magma.hibernate.cfg.MagmaNamingStrategy" />
    </property>
    <property name="annotatedClasses">
      <bean factory-bean="datasourceClasses" factory-method="getAnnotatedTypes" />
    </property>

    <!-- This is required to allow Hibernate to register transaction synchronisations. -->
    <property name="jtaTransactionManager" ref="jotm" />
    <!-- By setting this to false, the CurrentSessionContext implementation must be specified through hibernate.current_session_context_class -->
    <property name="exposeTransactionAwareSessionFactory" value="false" />

    <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
    <property name="hibernateProperties">
      <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
          <props>
            <prop key="hibernate.generate_statistics">true</prop>
            <prop key="hibernate.cache.use_structured_entries">true</prop>
            <prop key="hibernate.cache.use_query_cache">true</prop>
            <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            <prop key="hibernate.dialect">${org.obiba.opal.datasource.key.dialect}</prop>

            <!-- Set the CurrentSessionContext to JTASessionContext: a Hibernate Session will be available when a transaction is active -->
            <prop key="hibernate.current_session_context_class">jta</prop>

            <!-- Overridden to lookup the JOTM UserTransaction directly instead of a JNDI lookup -->
            <prop key="hibernate.transaction.factory_class">org.obiba.opal.core.tx.JOTMTransactionFactory</prop>
            <prop key="hibernate.transaction.auto_close_session">true</prop>
            <prop key="hibernate.transaction.flush_before_completion">true</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

  <!-- The Hibernate SessionFactory -->
  <bean id="opalSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource">
      <ref bean="opalDataSource" />
    </property>
    <property name="namingStrategy">
      <bean class="org.obiba.magma.hibernate.cfg.MagmaNamingStrategy" />
    </property>
    <property name="annotatedClasses">
      <bean class="org.obiba.opal.core.support.OpalAnnotationConfigurationHelper">
        <property name="additionalClasses">
          <list>
            <bean factory-bean="datasourceClasses" factory-method="getAnnotatedTypes" />
            <bean factory-bean="auditClasses" factory-method="getAnnotatedTypes" />
          </list>
        </property>
      </bean>
    </property>

    <!-- This is required to allow Hibernate to register transaction synchronisations. -->
    <property name="jtaTransactionManager" ref="jotm" />
    <!-- By setting this to false, the CurrentSessionContext implementation must be specified through hibernate.current_session_context_class -->
    <property name="exposeTransactionAwareSessionFactory" value="false" />

    <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
    <property name="hibernateProperties">
      <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
          <props>
            <prop key="hibernate.generate_statistics">true</prop>
            <prop key="hibernate.cache.use_structured_entries">true</prop>
            <prop key="hibernate.cache.use_query_cache">true</prop>
            <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            <prop key="hibernate.dialect">${org.obiba.opal.datasource.opal.dialect}</prop>

            <!-- Set the CurrentSessionContext to JTASessionContext: a Hibernate Session will be available when a transaction is active -->
            <prop key="hibernate.current_session_context_class">jta</prop>

            <!-- Overridden to lookup the JOTM UserTransaction directly instead of a JNDI lookup -->
            <prop key="hibernate.transaction.factory_class">org.obiba.opal.core.tx.JOTMTransactionFactory</prop>
            <prop key="hibernate.transaction.auto_close_session">true</prop>
            <prop key="hibernate.transaction.flush_before_completion">true</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

</beans>