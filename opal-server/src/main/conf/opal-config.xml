<org.obiba.opal.core.cfg.OpalConfiguration>

  <secretKey>this will be generated during install</secretKey>

  <fileSystemRoot>file://${OPAL_HOME}/fs</fileSystemRoot>

  <functionalUnits>
  </functionalUnits>

  <magmaEngineFactory>

    <extensions>
      <org.obiba.magma.js.MagmaJsExtension />
      <org.obiba.magma.xstream.MagmaXStreamExtension />
      <org.obiba.magma.security.MagmaSecurityExtension />
    </extensions>

    <factories>
      <org.obiba.magma.datasource.hibernate.support.HibernateDatasourceFactory>
        <name>opal-data</name>
        <sessionFactoryProvider class="org.obiba.magma.datasource.hibernate.support.SpringBeanSessionFactoryProvider">
          <beanName>opalSessionFactory</beanName>
        </sessionFactoryProvider>
      </org.obiba.magma.datasource.hibernate.support.HibernateDatasourceFactory>
    </factories>
  </magmaEngineFactory>

  <extensions>
    <org.obiba.opal.datashield.cfg.DatashieldConfiguration>
      <aggregatingMethods>
        <org.obiba.opal.datashield.RFunctionDataShieldMethod>
          <name>length</name>
          <function>length</function>
        </org.obiba.opal.datashield.RFunctionDataShieldMethod>
        <org.obiba.opal.datashield.RFunctionDataShieldMethod>
          <name>coefficients</name>
          <function>coefficients</function>
        </org.obiba.opal.datashield.RFunctionDataShieldMethod>
        <org.obiba.opal.datashield.CustomRScriptMethod>
          <name>summary</name>
          <script><![CDATA[function(data) {
 if(is.vector(data) && length(data) == 1) {
   "Vector too small."
 } else {
   base::summary(data);
 }
}]]>
</script>
        </org.obiba.opal.datashield.CustomRScriptMethod>
        <org.obiba.opal.datashield.CustomRScriptMethod>
          <name>glm.ds</name>
          <script><![CDATA[function (mod.glm.ds) {

  X.mat<-as.matrix(mod.glm.ds$x)
  numsubs<-dim(X.mat)[1]

  y.vect<-as.vector(mod.glm.ds$y)

  lp.vect<-X.mat%*%mod.glm.ds$beta.vect

  f<-mod.glm.ds$family

  mu.vect<-f$linkinv(lp.vect)
  mu.eta.val <- f$mu.eta(lp.vect)
  var.vect<-f$variance(mu.vect)
  dev<-sum(f$dev.resids(y.vect, mu.vect, mod.glm.ds$weights))

  W.mat <- diag(as.vector(mu.eta.val^2/var.vect))

  info.matrix<-t(X.mat)%*%W.mat%*%X.mat
  u.vect<-(y.vect-mu.vect)*1/var.vect
  score.vect<-t(X.mat)%*%W.mat%*%u.vect

  list(info.matrix=info.matrix, score.vect=score.vect, numsubs=numsubs, dev=dev)
}]]>
</script>
        </org.obiba.opal.datashield.CustomRScriptMethod>
      </aggregatingMethods>
    </org.obiba.opal.datashield.cfg.DatashieldConfiguration>
  </extensions>
</org.obiba.opal.core.cfg.OpalConfiguration>