<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.obiba.opal</groupId>
  <artifactId>opal</artifactId>
  <packaging>pom</packaging>
  <version>1.10.0</version>

  <name>opal</name>
  <description>Opal Application</description>

  <licenses>
    <license>
      <name>GNU Public License version 3</name>
      <url>LICENSE</url>
    </license>
  </licenses>

  <modules>
    <module>opal-core-api</module>
    <module>opal-core</module>
    <module>opal-core-ws</module>
    <module>opal-sshd</module>
    <module>opal-shell</module>
    <module>opal-server</module>
    <module>opal-fs</module>
    <module>opal-reporting</module>
    <module>opal-r</module>
    <module>opal-httpd</module>
    <module>opal-ws</module>
    <module>opal-web-model</module>
    <module>opal-gwt-client</module>
    <module>opal-rest-client</module>
    <module>opal-datashield</module>
    <module>opal-search</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- Obiba dependencies -->
      <dependency>
        <groupId>org.obiba</groupId>
        <artifactId>obiba-core</artifactId>
        <version>${obiba.commons.version}</version>
      </dependency>

      <!-- Magma dependencies -->
      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-api</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-js</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-security</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-xstream</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-datasource-fs</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-datasource-limesurvey</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-datasource-excel</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-datasource-csv</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-datasource-jdbc</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-datasource-null</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-hibernate-common</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-hibernate-datasource</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-hibernate-audit</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-crypt</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>org.obiba.magma</groupId>
        <artifactId>magma-math</artifactId>
        <version>${magma.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <!-- Definition of all Spring modules -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Spring batch has a different release cycle than Spring itself -->
      <dependency>
        <groupId>org.springframework.batch</groupId>
        <artifactId>spring-batch-core</artifactId>
        <version>${spring-batch.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.batch</groupId>
        <artifactId>spring-batch-test</artifactId>
        <version>${spring-batch.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Hibernate Dependencies -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-ehcache</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-annotations</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>2.2</version>
      </dependency>

      <dependency>
        <groupId>javax.transaction</groupId>
        <artifactId>jta</artifactId>
        <version>${jta.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>persistence-api</artifactId>
        <version>${jpa.version}</version>
      </dependency>

      <!-- JOTM dependencies -->
      <dependency>
        <groupId>org.ow2.jotm</groupId>
        <artifactId>jotm-core</artifactId>
        <version>${jotm.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.ow2.carol.irmi</groupId>
            <artifactId>irmi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.cmi</groupId>
            <artifactId>cmi-admin</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.cmi</groupId>
            <artifactId>cmi-jndi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jacorb</groupId>
            <artifactId>jacorb-idl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- JOTM requires javax.resource and javax.transaction Java APIs; these are missing due to the exclusions declared 
        above for the JOTM dependency. -->
      <!-- javax.resource -->
      <dependency>
        <groupId>org.ow2.spec.ee</groupId>
        <artifactId>ow2-connector-1.5-spec</artifactId>
        <version>${ow2.spec.version}</version>
      </dependency>

      <!-- javax.transaction -->
      <dependency>
        <groupId>org.ow2.spec.ee</groupId>
        <artifactId>ow2-jta-1.1-spec</artifactId>
        <version>${ow2.spec.version}</version>
      </dependency>

      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>${xstream.version}</version>
      </dependency>

      <!-- Set commons collections version because Spring declares it as optional -->
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections.version}</version>
      </dependency>

      <!-- Use commons-dbcp as the DataSource implementation -->
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${commons-dbcp.version}</version>
      </dependency>

      <!-- If we need MySQL -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-connector-java.version}</version>
      </dependency>

      <!-- Logging framework -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Use commons-logging over slf4j in order to remove it completely from the runtime classpath -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>${slf4j.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- Unit test libraries -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.dbunit</groupId>
        <artifactId>dbunit</artifactId>
        <version>${dbunit.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>poi</groupId>
            <artifactId>poi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>${hsqldb.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- Use log4j during testing -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${liquibase.version}</version>
      </dependency>

      <!-- Shiro dependencies -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-spring</artifactId>
        <version>${shiro.version}</version>
      </dependency>

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-ext-jdk16</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <!-- Quartz Scheduler -->
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Logging -->
    <!-- Every child should use SLF4J for logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- We've excluded commons-logging from our transitive dependencies. We replace it here. -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Internally, we'll use log4j when unit-testing (scope is defined above) -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <failOnError>false</failOnError>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <linkXref>false</linkXref>
            <sourceEncoding>ISO-8859-1</sourceEncoding>
            <minimumTokens>30</minimumTokens>
            <targetJdk>1.6</targetJdk>
            <excludeRoots>
              <excludeRoot>target/generated-sources/javacc</excludeRoot>
              <excludeRoot>target/generated-sources/jjtree</excludeRoot>
            </excludeRoots>
            <rulesets>
              <ruleset>${pmd.ruleset.dir}/opal-pmd-ruleset.xml</ruleset>
            </rulesets>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.3</version>
          <configuration>
            <format>xml</format>
          </configuration>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>               
        
      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <encoding>ISO-8859-1</encoding>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <branchBase>https://svn.obiba.org/opal/branches</branchBase>
          <tagBase>https://svn.obiba.org/opal/tags/releases</tagBase>
          <!-- Use parent version as modules' version -->
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <releaseProfiles>release</releaseProfiles>
        </configuration>
      </plugin>

    </plugins>

    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
        <filtering>false</filtering>
      </testResource>

      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
        <includes>
          <include>**</include>
        </includes>
        <filtering>false</filtering>
      </testResource>
    </testResources>

  </build>

  <repositories>
    <repository>
      <id>obiba.org</id>
      <name>Obiba Maven 2.x Repository</name>
      <url>http://www.obiba.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>snapshot.obiba.org</id>
      <name>Obiba Snaphot Maven 2.x Repository</name>
      <url>http://www.obiba.org/maven2-snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>jboss.org</id>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
    </repository>

    <repository>
      <id>oss.sonatype</id>
      <url>http://oss.sonatype.org/content/repositories/releases/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

  </repositories>

  <distributionManagement>
    <!-- URL used to deploy the release artifacts -->
    <repository>
      <id>deploy.obiba.org</id>
      <url>${obiba.deploy.url}/maven2</url>
      <uniqueVersion>false</uniqueVersion>
    </repository>

    <!-- URL used to deploy the SNAPSHOTS artifacts -->
    <snapshotRepository>
      <id>deploy.obiba.org</id>
      <url>${obiba.deploy.url}/maven2-snapshots</url>
      <uniqueVersion>true</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>

  <scm>
    <connection>scm:svn:https://svn.obiba.org/opal/tags/releases/1.10.0</connection>
    <developerConnection>scm:svn:https://svn.obiba.org/opal/tags/releases/1.10.0</developerConnection>
  </scm>

  <properties>
    <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>

    <pmd.ruleset.dir>${basedir}</pmd.ruleset.dir>

    <obiba.commons.version>1.2.1</obiba.commons.version>
    <magma.version>1.2.12</magma.version>
    <guava.version>10.0.1</guava.version>
    <spring.version>3.0.6.RELEASE</spring.version>
    <spring-batch.version>2.0.3.RELEASE</spring-batch.version>
    <slf4j.version>1.6.2</slf4j.version>
    <jta.version>1.0.1B</jta.version>
    <jpa.version>1.0</jpa.version>
    <hsqldb.version>2.2.6</hsqldb.version>
    <dbunit.version>2.2.2</dbunit.version>
    <junit.version>4.7</junit.version>
    <easymock.version>2.4</easymock.version>
    <hamcrest.version>1.1</hamcrest.version>
    <mysql-connector-java.version>5.1.17</mysql-connector-java.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <commons-collections.version>3.2</commons-collections.version>
    <xstream.version>1.3.1</xstream.version>
    <hibernate.version>3.5.6-Final</hibernate.version>
    <jotm.version>2.1.9</jotm.version>
    <ow2.spec.version>1.0.2</ow2.spec.version>
    <liquibase.version>1.9.4</liquibase.version>
    <shiro.version>1.1.0</shiro.version>
    <bouncycastle.version>1.46</bouncycastle.version>
    <commons-fileupload.version>1.2.1</commons-fileupload.version>
    <commons-io.version>1.3.2</commons-io.version>
    <quartz.version>1.8.3</quartz.version>
    
    <maven-surefire-plugin.version>2.10</maven-surefire-plugin.version>
    
  </properties>

  <profiles>
    <profile>
      <!-- A profile for the builds NOT performed by the continuous integration server. This profile is active by default, 
        which means that it will be deactivated if any other profile is specifically activated (ie: using mvn -P build-id). -->
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.0-beta-4</version>
            <executions>
              <execution>
                <id>createBuildNumber</id>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                  <!-- This configuation should allow machines without the SCM client to create a buildNumber property -->
                  <format>{0,date,yyyyMMddHHmmss}</format>
                  <items>
                    <item>timestamp</item>
                  </items>
                  <revisionOnScmFailure>LOCAL</revisionOnScmFailure>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- A profile for the builds performed by the continuous integration server -->
      <id>ci-build</id>

      <build>
        <plugins>

          <!-- Creates a ${buildNumber} variable within Maven that can be used throughout the build process -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.0-beta-4</version>
            <executions>
              <execution>
                <id>createBuildNumber</id>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
            </configuration>
          </plugin>

        </plugins>
      </build>

    </profile>
  </profiles>
</project>
